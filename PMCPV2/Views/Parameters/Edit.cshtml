@model PMCPV2.Models.Parameter

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<div class="row border-bottom white-bg dashboard-header">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Parameter</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID)


            <div class="form-group">
                @Html.LabelFor(model => model.parameterNameID_FK, "parameterNameID_FK", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("parameterNameID_FK", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.parameterNameID_FK, "", new { @class = "text-danger" })
                </div>
            </div>


            @*<div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.parameterCategory_FKID, "parameterCategory_FKID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("parameterCategory_FKID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.parameterCategory_FKID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.parameterCalcGroup_FKID, "parameterCalcGroup_FKID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("parameterCalcGroup_FKID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.parameterCalcGroup_FKID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ParameterWight, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ParameterWight, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ParameterWight, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.parameterUnitType_FKID, "parameterUnitType_FKID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("parameterUnitType_FKID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.parameterUnitType_FKID, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.networkType_FKID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.networkType_FKID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.networkType_FKID, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.isActive, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.isActive)
                        @Html.ValidationMessageFor(model => model.isActive, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.isRquired, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.isRquired)
                        @Html.ValidationMessageFor(model => model.isRquired, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>



            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
